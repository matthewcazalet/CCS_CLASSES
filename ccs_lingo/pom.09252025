<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- ==================== PROJECT COORDINATES ==================== -->
  <groupId>com.infinitecampus.ccs.lingo</groupId>
  <artifactId>ccs_lingo</artifactId>
  <version>2025.06</version>
  <name>ccs_lingo</name>

  <!-- ==================== PROPERTIES ==================== -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!--default 1.8 can be overwrittwn via profile-->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <!-- AWS SDK Version -->
     <!--
    <aws.sdk.version>2.20.81</aws.sdk.version>
  -->    
    <aws.sdk.version>2.19.13</aws.sdk.version>
    
    <!-- Logging Version -->
     <!--
    <log4j.version>2.20.0</log4j.version>
  -->
      <!-- Logging Version -->
  <log4j.version>2.17.2</log4j.version> <!-- WAS 2.20.0 -->
  
    <gson.version>2.10.1</gson.version>
    
    <!-- HTTP Client Version -->
    <okhttp.version>4.9.3</okhttp.version> <!-- WAS 4.12.0 -->
    
    <!-- Google Cloud Version -->
    <google.translate.version>2.46.0</google.translate.version>
    
    <!-- JSON Processing Version -->
    <gson.version>2.10.1</gson.version> 

    <!-- PDF Processing Versions -->
    <pdfbox.version>2.0.16</pdfbox.version> <!-- WAS 2.0.24 -->
    <itext.version>5.5.13.3</itext.version>

    <jackson.version>2.17.2</jackson.version>

  </properties>
<!-- ==================== DEPENDENCY MANAGEMENT ==================== -->
<dependencyManagement>
  <dependencies>
    <!-->
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-context</artifactId>
      <version>1.27.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-api</artifactId>
      <version>1.27.2</version>
    
    </dependency>
  -->
    <!-- Force WebApp versions for transitive dependencies -->
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>json-utils</artifactId>
      <version>2.19.13</version>
    </dependency>  
    <!-- This explicitly controls each conflicting part of the Google client library -->
    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
      <version>1.31.1</version> 
      <!--<scope>provided</scope>-->
    </dependency>
    <dependency>
      <groupId>com.google.oauth-client</groupId>
      <artifactId>google-oauth-client</artifactId>
      <version>1.31.2</version> <!-- Webapp version -->
       <!--<scope>provided</scope>-->
    </dependency>
    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client</artifactId>
      <version>1.43.3</version> <!-- Webapp version -->
      <!--<scope>provided</scope>-->
    </dependency>
    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client-apache-v2</artifactId>
      <version>1.38.0</version> <!-- Webapp version -->
      <!--<scope>provided</scope>-->
    </dependency>
    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client-jackson2</artifactId>
      <version>1.38.0</version> <!-- Webapp version -->
       <!--<scope>provided</scope>-->
    </dependency>
     <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client-gson</artifactId>
      <version>1.43.3</version> <!-- Webapp version -->
       <!--<scope>provided</scope>-->
    </dependency>
    <!-- END OF GOOGLE SUITE BLOCK -->

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.15</version>
      <scope>provided</scope>
    </dependency>

<!-- OKHTTP SUITE -->
<dependency>
  <groupId>com.squareup.okhttp3</groupId>
  <artifactId>okhttp</artifactId>
  <version>4.9.3</version>
  <scope>provided</scope>
</dependency>
<dependency>
  <groupId>com.squareup.okio</groupId>
  <artifactId>okio-jvm</artifactId>
  <version>2.10.0</version>
  <scope>provided</scope>
</dependency>
<dependency>
  <groupId>org.jetbrains.kotlin</groupId>
  <artifactId>kotlin-stdlib</artifactId>
  <version>1.4.20</version>
  <scope>provided</scope>
</dependency>
<dependency>
  <groupId>org.jetbrains.kotlin</groupId>
  <artifactId>kotlin-stdlib-common</artifactId>
  <version>1.4.20</version>
  <scope>provided</scope>
</dependency>
<!-- END OF OKHTTP SUITE BLOCK -->
    <!-- JACKSON SUITE -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-xml</artifactId>
      <version>${jackson.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- END OF JACKSON SUITE BLOCK -->
 <!-- BLOCK  OF UTILITY JARS -->
    <dependency>
      <groupId>com.google.j2objc</groupId>
      <artifactId>j2objc-annotations</artifactId>
      <version>2.8</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>2.0.16</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-core</artifactId>
      <version>3.7.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.threeten</groupId>
      <artifactId>threetenbp</artifactId>
      <version>1.3.8</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker-qual</artifactId>
      <version>3.43.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.2</version>
      <scope>provided</scope>
    </dependency>
    <!-- END OF utility BLOCK -->

  </dependencies>
</dependencyManagement>  <!-- ==================== DEPENDENCIES ==================== -->
<!-- Build commands: -->
<!-- mvn clean compile -Pjava8  compiles against 1.8-->
<!-- mvn clean compile -Pjava17  compiles against 17-->
<dependencies>
  
  <!-- ========== INFINITE CAMPUS CORE DEPENDENCY ========== -->
  <dependency>
    <groupId>com.infinitecampus</groupId>
    <artifactId>infinitecampus_classes</artifactId>
    <version>1.0</version>
    <scope>system</scope>
    <systemPath>${project.basedir}/../../GlobalLibrary/infinitecampus-classes-2527.jar</systemPath>
  </dependency>

  <!-- ========== LOGGING DEPENDENCIES ========== -->
  <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>${log4j.version}</version>
    <scope>provided</scope>
  </dependency>
  <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-1.2-api</artifactId>
    <version>${log4j.version}</version>
    <scope>provided</scope>
  </dependency>

  <!-- ========== AWS DEPENDENCIES ========== -->
  <!-- AWS Translate Service -->
  <dependency>
    <groupId>software.amazon.awssdk</groupId>
    <artifactId>translate</artifactId>
    <version>${aws.sdk.version}</version>
    <exclusions>
      <exclusion>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>protocol-core</artifactId>
      </exclusion>
      <exclusion>
        <groupId>org.reactivestreams</groupId>
        <artifactId>reactive-streams</artifactId>
    </exclusion>
    </exclusions>
  </dependency>
  
  <!-- AWS Textract Service -->
  <dependency>
    <groupId>software.amazon.awssdk</groupId>
    <artifactId>textract</artifactId>
    <version>${aws.sdk.version}</version>
    <exclusions>
      <exclusion>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>protocol-core</artifactId>
      </exclusion>
      <exclusion>
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>aws-core</artifactId>
    </exclusion>
    <exclusion>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>aws-json-protocol</artifactId>
  </exclusion>
  <exclusion>
    <groupId>org.reactivestreams</groupId>
    <artifactId>reactive-streams</artifactId>
</exclusion>
    </exclusions>
  </dependency>

  <!-- ========== GOOGLE CLOUD DEPENDENCIES ========== -->
  <dependency>
    <groupId>com.google.cloud</groupId>
    <artifactId>google-cloud-translate</artifactId>
    <version>${google.translate.version}</version>
    <exclusions>
        <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </exclusion>
        <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </exclusion>    
        <exclusion>
            <groupId>com.google.android</groupId>
            <artifactId>annotations</artifactId>
        </exclusion>
        <!-- Add this exclusion for grpc-context -->
        <exclusion>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-context</artifactId>
        </exclusion>
    </exclusions>
</dependency>

  <!-- ========== AZURE DEPENDENCIES ========== -->
  <!-- HTTP Client for Azure -->
  <dependency>
    <groupId>com.squareup.okhttp3</groupId>
    <artifactId>okhttp</artifactId>
    <version>${okhttp.version}</version>
    <scope>provided</scope> 
  </dependency>

  <!-- Azure Storage -->
  <dependency>
    <groupId>com.azure</groupId>
    <artifactId>azure-storage-blob</artifactId>
    <version>12.19.0</version>
  </dependency>

  <!-- ========== PDF PROCESSING DEPENDENCIES ========== -->
  <!-- Apache PDFBox -->
  <dependency>
    <groupId>org.apache.pdfbox</groupId>
    <artifactId>pdfbox-tools</artifactId>
    <version>${pdfbox.version}</version>
    <scope>provided</scope> 
  </dependency>

  <!-- iText PDF -->
  <dependency>
    <groupId>com.itextpdf</groupId>
    <artifactId>itextpdf</artifactId>
    <version>${itext.version}</version>
  </dependency>

  <!-- ========== UTILITY DEPENDENCIES ========== -->
  <dependency>
    <groupId>commons-lang</groupId>
    <artifactId>commons-lang</artifactId>
    <version>2.6</version>
  </dependency>

  <!-- ========== PROVIDED DEPENDENCIES (Already in WebApp) ========== -->
  <!-- These versions match what's already in the web application -->
  <dependency>
    <groupId>org.reactivestreams</groupId>
    <artifactId>reactive-streams</artifactId>
    <version>1.0.4</version>
    <scope>provided</scope>
</dependency>
  <dependency>
    <groupId>software.amazon.awssdk</groupId>
    <artifactId>annotations</artifactId>
    <version>2.19.13</version>
    <scope>provided</scope>
  </dependency>
  <dependency>
    <groupId>org.jetbrains</groupId>
    <artifactId>annotations</artifactId>
    <version>24.0.1</version>
    <scope>provided</scope>
  </dependency>
  <dependency>
    <groupId>software.amazon.awssdk</groupId>
    <artifactId>protocol-core</artifactId>
    <version>2.19.13</version>
    <scope>provided</scope>
  </dependency>
  <dependency>
    <groupId>software.amazon.awssdk</groupId>
    <artifactId>json-utils</artifactId>
    <version>2.19.13</version>
    <scope>provided</scope>
  </dependency>
  <dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-annotations</artifactId>
    <version>2.17.2</version>
    <scope>provided</scope>
  </dependency>
  <!--
  <dependency>
    <groupId>io.grpc</groupId>
    <artifactId>grpc-context</artifactId>
    <version>1.27.2</version>
    <scope>provided</scope>
  </dependency>
  <dependency>
    <groupId>io.grpc</groupId>
    <artifactId>grpc-api</artifactId>
    <version>1.27.2</version>  
  </dependency>
-->
  <dependency>
    <groupId>io.grpc</groupId>
    <artifactId>grpc-core</artifactId>
    <version>1.62.2</version>
    <!-- NO VERSION - will use google-cloud-translate -->
</dependency>
<dependency>
  <groupId>io.grpc</groupId>
  <artifactId>grpc-netty-shaded</artifactId>
  <version>1.62.2</version>
  <!-- NO VERSION - will use google-cloud-translate -->
  <scope>runtime</scope>
</dependency>
<dependency>
  <groupId>io.grpc</groupId>
  <artifactId>grpc-grpclb</artifactId>
  <version>1.62.2</version>
  <!-- NO VERSION - will use google-cloud-translate -->
</dependency>
<!--
<dependency>
  <groupId>software.amazon.awssdk</groupId>
  <artifactId>aws-core</artifactId>
  <version>2.19.13</version>
  <scope>compile</scope>
</dependency>
-->
<dependency>
  <groupId>software.amazon.awssdk</groupId>
  <artifactId>aws-json-protocol</artifactId>
  <version>2.19.13</version>
  <scope>provided</scope>
</dependency>
    <!-- ========== COMMENTED OUT DEPENDENCIES ========== -->
    <!-- JSON Processing (Currently not used) -->
    <!--
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
    </dependency>
    -->

    <!-- AWS SDK Core (Currently not used) -->
    <!--
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>aws-core</artifactId>
      <version>${aws.sdk.version}</version>
    </dependency>
    -->

    <!-- AWS SDK Utils (Currently not used) -->
    <!--
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>utils</artifactId>
      <version>${aws.sdk.version}</version>
    </dependency>
    -->

    <!-- PDF Box Core (Currently not used) -->
    <!--
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>${pdfbox.version}</version>
    </dependency>
    -->

    <!-- PDF Box Fonts (Currently not used) -->
    <!--
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>fontbox</artifactId>
      <version>${pdfbox.version}</version>   
    </dependency>
    -->

    <!-- Apache HTTP Client (Currently not used) -->
    <!--
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.14</version>
    </dependency>
    -->

    <!-- Commons Logging (Currently not used) -->
    <!--
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.2</version>
    </dependency>
    -->

    <!-- SQL Server JDBC Driver (Used for testing only) -->
    <!--
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>mssql-jdbc</artifactId>
      <version>10.2.0.jre8</version> 
    </dependency>
    -->

  </dependencies>

  <!-- ==================== BUILD CONFIGURATION ==================== -->
  <build>
    <!-- ========== RESOURCES CONFIGURATION ========== -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>fonts/**</include>
        </includes>
      </resource>
    </resources>

    <!-- ========== PLUGINS ========== -->
    <plugins>
      <!-- ========== COMMENTED OUT STANDARD PLUGINS ========== -->
      <!--
      Optional: Clean, resources, jar, and test plugins 
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.2</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.1</version>
      </plugin>
      DO NOT WANT A JAR FILE?
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
      </plugin>
      -->

      <!-- ========== COMPILER PLUGIN ========== -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>

      <!-- ========== DEPENDENCY PLUGIN ========== -->
      <!-- Copies dependencies to target/lib, excluding system-scoped JARs -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <includeScope>runtime</includeScope> <!-- excludes system-scoped JARs -->
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- ========== SHADE PLUGIN WITH RELOCATIONS ========== -->
      <!-- Creates an uber JAR with all dependencies and relocates packages to avoid conflicts -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              
              <!-- PACKAGE RELOCATIONS TO AVOID CONFLICTS -->
              <relocations>
                <!-- Relocate AWS SDK classes that aren't provided -->
                <relocation>
                  <pattern>software.amazon.awssdk</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.awssdk</shadedPattern>
                  <excludes>
                    <!-- Don't relocate classes that are provided by webapp -->
                    <exclude>software.amazon.awssdk.annotations.**</exclude>
                    <exclude>software.amazon.awssdk.protocols.core.**</exclude>
                    <exclude>software.amazon.awssdk.protocols.json.**</exclude>
                  </excludes>
                </relocation>
                
                <!-- Relocate Google Cloud dependencies -->
                <relocation>
                  <pattern>com.google.cloud</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.googlecloud</shadedPattern>
                </relocation>
                
                <!-- Relocate Google API dependencies -->
                <relocation>
                  <pattern>com.google.api</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.googleapi</shadedPattern>
                </relocation>
                
                <!-- Relocate Google Auth dependencies -->
                <relocation>
                  <pattern>com.google.auth</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.googleauth</shadedPattern>
                </relocation>
                
                <!-- Relocate Google Common packages -->
                <relocation>
                  <pattern>com.google.common</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.googlecommon</shadedPattern>
                </relocation>
                
                <!-- Relocate Azure dependencies -->
                <relocation>
                  <pattern>com.azure</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.azure</shadedPattern>
                </relocation>
                
                <!-- Relocate iText -->
                <relocation>
                  <pattern>com.itextpdf</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.itextpdf</shadedPattern>
                </relocation>
                
                <!-- Relocate gRPC COMPLETELY (no excludes) -->
                <relocation>
                  <pattern>io.grpc</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.grpc</shadedPattern>
                </relocation>
                
                <!-- Relocate Protobuf -->
                <relocation>
                  <pattern>com.google.protobuf</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.protobuf</shadedPattern>
                </relocation>
                
                <!-- Relocate Netty if used by Azure -->
                <relocation>
                  <pattern>io.netty</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.netty</shadedPattern>
                </relocation>
                
                <!-- Relocate commons-lang -->
                <relocation>
                  <pattern>org.apache.commons.lang</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.commonslang</shadedPattern>
                </relocation>
            
                <!-- Relocate Apache HTTP Client -->
                <relocation>
                  <pattern>org.apache.http</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.apachehttpclient</shadedPattern>
                </relocation>
            
                <!-- Relocate Jackson (if any non-provided parts are included) -->
                <relocation>
                  <pattern>com.fasterxml.jackson</pattern>
                  <shadedPattern>com.infinitecampus.ccs.lingo.shaded.jackson</shadedPattern>
                  <excludes>
                    <exclude>com.fasterxml.jackson.core.**</exclude>
                    <exclude>com.fasterxml.jackson.databind.**</exclude>
                    <exclude>com.fasterxml.jackson.annotation.**</exclude>
                    <exclude>com.fasterxml.jackson.dataformat.**</exclude>
                    <exclude>com.fasterxml.jackson.datatype.**</exclude>
                  </excludes>
                </relocation>
            </relocations>
              <!-- Service files handling -->
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
              
              <!-- Security and test exclusions -->
              <filters>
                <!--
                <filter>
                  <artifact>io.grpc:grpc-core</artifact>
                  <excludes>
                      <exclude>META-INF/services/io.grpc.LoadBalancerProvider</exclude>
                      <exclude>META-INF/services/io.grpc.NameResolverProvider</exclude>
                  </excludes>
              </filter>
              -->
              <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                      <exclude>META-INF/*.SF</exclude>
                      <exclude>META-INF/*.DSA</exclude>
                      <exclude>META-INF/*.RSA</exclude>
                      <exclude>com/infinitecampus/ccs/lingo/CAMPUSTESTING/**</exclude>
                  </excludes>
              </filter>
              <!--
              <filter>
                  <artifact>io.grpc:grpc-context</artifact>
                  <excludes>
                      <exclude>**</exclude>
                  </excludes>
              </filter>
            -->
              <filter>
                  <artifact>org.reactivestreams:reactive-streams</artifact>
                  <excludes>
                      <exclude>**</exclude>
                  </excludes>
              </filter>
              </filters>
              
              <!-- Artifact inclusion/exclusion rules -->
              <artifactSet>
                <excludes>
                  <!-- Jackson - provided by webapp -->
                  <exclude>com.fasterxml.jackson.core:jackson-annotations</exclude>
                  
                  <!-- AWS components that are provided by webapp -->
                  <exclude>software.amazon.awssdk:annotations</exclude>
                  <exclude>software.amazon.awssdk:protocol-core</exclude>
                  <exclude>software.amazon.awssdk:json-utils</exclude>
                  
                  <!-- Other provided components -->
                  <exclude>org.jetbrains:annotations</exclude>
                  <exclude>com.infinitecampus:infinitecampus_classes</exclude>
                  <!--<exclude>io.grpc:grpc-context</exclude>-->
                  <!--<exclude>io.grpc:*</exclude>-->
                  <exclude>org.reactivestreams:reactive-streams</exclude>
                  
                  <!-- AWS SDK components to INCLUDE (removed from excludes) -->
                  <!-- REMOVED: software.amazon.awssdk:aws-core -->
                  <!-- REMOVED: software.amazon.awssdk:aws-json-protocol -->
                  <!-- REMOVED: software.amazon.awssdk:aws-query-protocol -->
                  <!-- REMOVED: software.amazon.awssdk:aws-xml-protocol -->
              </excludes>
            </artifactSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- ==================== PROFILES ==================== -->
  <profiles>
    
    <!-- ========== WEBAPP COMPILE PROFILE ========== -->
    <!-- Profile for testing against webapp libraries -->
    <profile>
      <id>webapp-compile</id>
      <dependencies>
        <dependency>
          <groupId>custom.webapp</groupId>
          <artifactId>webapp-lib</artifactId>
          <version>1.0</version>
          <scope>system</scope>
          <systemPath>${project.basedir}/webapp_lib/some-lib.jar</systemPath>
        </dependency>
        <!-- Repeat for each JAR you want to test against -->
      </dependencies>
    </profile>
    
    <!-- ========== JAVA 8 PROFILE ========== -->
    <!-- Use: mvn clean compile -Pjava8 -->
    <profile>
      <id>java8</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.11.0</version>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
              <release>8</release>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- ========== JAVA 17 PROFILE ========== -->
    <!-- Use: mvn clean compile -Pjava17 -->
    <profile>
      <id>java17</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.11.0</version>
            <configuration>
              <source>17</source>
              <target>17</target>
              <!-- No <release> here -->
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>              